name: Build and Deploy Documentation

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write   # to comment preview URL on PRs

env:
  NODE_OPTIONS: "--max_old_space_size=4096"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs
    outputs:
      preview_url: ${{ steps.netlify_preview.outputs.preview_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Install dependencies
        run: |
          npm ci

      - name: Type check
        run: |
          npx tsc -b

      - name: Build Docusaurus
        run: npx docusaurus build --no-minify

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: docusaurus-build
          path: docs/build
          retention-days: 7

      # Preview deploy for PRs
      - name: Netlify deploy preview
        id: netlify_preview
        if: ${{ github.event_name == 'pull_request' }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm i -g netlify-cli
          # Will return a draft URL. Capture it.
          url=$(netlify deploy --dir build --json | jq -r '.deploy_url')
          echo "preview_url=$url" >> $GITHUB_OUTPUT

      - name: Comment preview URL on PR
        if: ${{ github.event_name == 'pull_request' && steps.netlify_preview.outputs.preview_url }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = process.env.PREVIEW_URL;
            const body = `âœ… Netlify preview ready:\n\n${url}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          PREVIEW_URL: ${{ steps.netlify_preview.outputs.preview_url }}

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: docusaurus-build
          path: build

      - name: Deploy to Netlify (prod)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm i -g netlify-cli
          netlify deploy --prod --dir build

      # Create GitHub Release with a zipped build
      - name: Zip build
        run: (cd build && zip -r ../site.zip .)

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: site-${{ github.run_number }}
          name: Docusaurus site ${{ github.run_number }}
          files: site.zip
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}